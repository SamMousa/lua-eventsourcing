name: Continuous integration
on:
  push:
    branches:
      - master
jobs:
  lint:
    name: Run luacheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: luacheck
        uses: nebularg/actions-luacheck@v1.1.0
        with:
          files: source
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: install gitman
        run: pipx install gitman
      - name: install dependencies
        run: gitman install
      - uses: leafo/gh-actions-lua@v8.0.0
        with:
          luaVersion: "5.1.5"
      - name: Run tests
        run: ./runtests.sh
  release:
    name: Automated release
    needs: [test, lint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: cycjimmy/semantic-release-action@v2
        with:
          extra_plugins: |
            @semantic-release/exec
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # fetch tag so release script realizes we're safe to release
      - name: debug
        run: git tag --points-at HEAD
      - name: Curseforge TBC
        if: steps.semantic.outputs.new_release_published == 'true'
        uses: BigWigsMods/packager@master
        env:
          package: LibEventSourcing
          CF_API_KEY: ${{ secrets.CURSEFORGE_TOKEN }}
          GITHUB_OAUTH: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REF: v${{ steps.semantic.outputs.new_release_version }}
        with:
          args: "-c -o -e -u -g bcc -r ."
      - name: Curseforge Classic
        if: steps.semantic.outputs.new_release_published == 'true'
        uses: BigWigsMods/packager@master
        env:
          package: LibEventSourcing
          CF_API_KEY: ${{ secrets.CURSEFORGE_TOKEN }}
          GITHUB_OAUTH: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REF: v${{ steps.semantic.outputs.new_release_version }}
        with:
          args: "-c -o -e -u -g classic -r ."